import telebot
from decouple import config
from time import sleep
from decouple import config
import random
from telebot import types

bot = telebot.TeleBot(
    token=config('TOKEN_BOT')
)
#commands
#@bot.message_handler(commands=['hi'])
#def start(message):
 #   bot.send_message(message.chat.id, '–ø—Ä–∏–≤–µ—Ç —è –∫–æ—Ç, —Ç–µ–ø–µ—Ä—å —è —Ç–≤–æ–π —Ö–æ–∑—è–∏–Ω')
#buttons
#@bot.message_handler(commands=['hi', 'hello', 'start', '–ø—Ä–∏–≤–µ—Ç'])
#def button(message):
  # markup = types.InlineKeyboardMarkup(row_width=2)
  #  btn1= types.InlineKeyboardButton('–ö–∞–∫ –¥–µ–ª–∞?', callback_data='question_1')
  #  btn2 = types.InlineKeyboardButton('–ü–æ–∫–∞', callback_data='goodbye')
  #  markup.add(btn1,btn2)
  #  bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!', reply_markup=markup)
@bot.message_handler(commands=['hi'])
def welcome(message):
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("üî≠ –≥–æ—Ä–æ—Å–∫–æ–ø")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫–æ—Ç–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def dududu(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 10)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


@bot.message_handler (commands= ["random_num"])
def random_num(message):
    num = random.randint(1, 10)
    bot.send_message(message.chat.id, str(num))








#textbot.py
@bot.message_handler(content_types=['text'])
def text(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
     bot.send_message(message.chat.id, "–ø—Ä–∏–≤–µ—Ç, –ø—Ä–∏–≤–µ—Ç")




bot.polling()
